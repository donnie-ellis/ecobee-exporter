name: 'Docker Build'

on:
  push:
    branches:
      - "master"
jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
      DOCKER_IMAGE: ecobee-exporter
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_TARGET_PLATFORM: linux/arm/v7

    steps:
      - name: 'Check it out'
        uses: actions/checkout@v1
        
      - name: 'Set it up'
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: latest
      
      - name: 'Prep it'
        if: success()
        id: prepare
        run: |
          echo ::set-output name=docker_platform::${DOCKER_TARGET_PLATFORM}
          echo ::set-output name=docker_image::${DOCKER_REGISTRY}/${DOCKER_IMAGE}        
          echo ::set-output name=version::${GITHUB_RUN_NUMBER} 
      
      - name: Docker login
        if: success()
        run: |
          echo "${DOCKER_PASSWORD}" | docker login ${DOCKER_REGISTRY} --username "${DOCKER_USERNAME}" --password-stdin 
      
      - name: 'Push it'
        if: success()
        run: |
          docker buildx build \
          --platform ${{ steps.prepare.outputs.docker_platform }} \
          --tag ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }} \
          --tag ${{ steps.prepare.outputs.docker_image }}:latest \
          --file ./Dockerfile \
          --output type=image,push=true .
            
      - name: 'Notify me'
        if: success()
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
          username: 'GitHub Bot'
          message: 'ecobee-exporter has been built. Tags: ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }} & ${{ steps.prepare.outputs.docker_image }}:latest'
